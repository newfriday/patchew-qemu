# -*- Mode: Python -*-
# vim: filetype=python
#
# This work is licensed under the terms of the GNU GPL, version 2 or later.
# See the COPYING file in the top-level directory.

##
# = Machines
##

{ 'include': 'common.json' }

##
# @EbpfObject:
#
# Structure that holds eBPF ELF object encoded in base64.
#
# Since: 8.1
#
##
{ 'struct': 'EbpfObject',
  'data': {'object': 'str'} }

##
# @EbpfProgramID:
#
# An enumeration of the eBPF programs. Currently, only RSS is presented.
# RSS - Receive side scaling, technology that allows steering traffic
# between queues by calculation hash. Users may set up indirection table
# and hash/packet types configurations. Used with virtio-net.
#
# Since: 8.1
##
{ 'enum': 'EbpfProgramID',
  'data': [ { 'name': 'rss', 'if': 'CONFIG_EBPF' } ] }

##
# @request-ebpf:
#
# Returns eBPF object that can be loaded with libbpf.
# Management applications (g.e. libvirt) may load it and pass file
# descriptors to QEMU. Which allows running QEMU without BPF capabilities.
# It's crucial that eBPF program/map is compatible with QEMU, so it's
# provided through QMP.
#
# Returns: RSS eBPF object encoded in base64.
#
# Since: 8.1
#
##
{ 'command': 'request-ebpf',
  'data': { 'id': 'EbpfProgramID' },
  'returns': 'EbpfObject',
  'if': 'CONFIG_EBPF' }

